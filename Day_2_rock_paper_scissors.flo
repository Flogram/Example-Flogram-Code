# This code is the solution for:
# https://adventofcode.com/2022/day/2

import "Base.File"

# On left(their hand):
their_rock := 'A'
their_paper := 'B'
their_scissors := 'C'

# On right(my hand):
my_rock := 'X'
my_paper := 'Y'
my_scissors := 'Z'

# score for each round:
rock: I32 = 1
paper: I32 = 2
scissor: I32 = 3
# PLUS
lose: I32 = 0
tie: I32 = 3
win: I32 = 6

mut total_score: I32 = 0

fn main() -> Error:
    file := File("rock_paper_scissors.txt")

    lines := file.get_lines()

    foreach line in lines:
        throw my_hand := I32(line[0])
        throw their_hand := I32(line[2])

        new_rps_score := rps_score(my_hand)
        new_outcome_score := outcome_score(my_hand, their_hand)

        total_score = +(total_score, new_rps_score)
        total_score = +(total_score, new_outcome_score)

    display("Total Score is {total_score}")

fn rps_score(my_hand: char) -> (score: I32):
    if my_hand is my_rock:
        return rock
    if my_hand is my_paper:
        return paper
    if my_hand is my_scissors:
        return scissors

fn outcome_score(my_hand: char, their_hand: char) -> (score: I32):
    if my_hand:
        is my_rock:
            if their_hand:
                is their_rock:
                    return tie
                is their_paper:
                    return lose
                is their_scissors:
                    return win
        is my_paper:
            if their_hand is their_rock:     #This way is not as fast(handled as if statements not switch case), we should optimize so it in the future but it's easier to read
                return win
            if their_hand is their_paper:
                return tie
            if their_hand is their_scissors:
                return lose
        is my_scissors:
            if their_hand is their_rock:
                return lose
            if their_hand is their_paper:
                return win
            if their_hand is their_scissors:
                return tie

